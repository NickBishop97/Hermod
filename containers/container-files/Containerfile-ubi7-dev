########################################################################################################################
# Filename: Containerfile-ubi7-dev
# 
# Date: 2022-07-25#    *  Update Repoistory Cache
# Author: Christopher J. Mundt
#
# Desc: Containerfile used to define a UBI 7 Init container image that has all the development tools
#       installed to support a Fast-DDS-Python and Fast-DDS-Gen installation.
#
# Reference: https://confluence.sde.sp.gc1.myngc.com/pages/viewpage.action?pageId=305785145
#            https://fast-dds.docs.eprosima.com/en/latest/fastdds/getting_started/simple_python_app/simple_python_app.html
#            https://austindewey.com/2019/03/26/enabling-software-collections-binaries-on-a-docker-image/
#            https://access.redhat.com/documentation/en-us/red_hat_software_collections/3/html-single/using_red_hat_software_collections_container_images/index#RHSCL_3.8_images
# 
# Info: Based this off of work previously completed under the Triton and Sleipnir projects
#
#
#           ************************************************************************************************************
# History:  |Version    Date        Task         Author                Desc
#           |-----------------------------------------------------------------------------------------------------------
#           | 1.0       2022-07-25  LETS-4804    Christopher J. Mundt  Initial Rev.
#           |
#           |-----------------------------------------------------------------------------------------------------------
# 
########################################################################################################################

#############################################
#
# Start from the Base UBI7-init image.
# Need to use the Init version to support DBUS/Systemd
# whic is needed to support Fast-DDS-Python Install later.
#
FROM registry.access.redhat.com/ubi7/ubi-init as dev-base
USER root
LABEL maintainer="christopher.mundt@ngc.com"

#############################################
#
# Install Development Tools and Dependencies.
#
#    *  Enable Red Hat Software Collections and Extras Repos
#    *  Install Miscellaneous Tools
#    *  Install Python 3.8
#    *  Intall Development Dependencies
#    *  Install PCRE2 Libraries
#    *  Install OpenSSL and PCKS11 Tools
#    *  Install Asio Development Libraries
#    *  Enable Software Collection Tools
#    *  Install Python Libraries
#    *  Remove Yum cache
RUN yum-config-manager --enable rhel-server-rhscl-7-rpms \
                                rhel-7-server-extras-rpms \
                                rhel-7-server-optional-rpms
RUN yum update -y
RUN yum install -y automake byacc cmake3 wget xterm \
 && yum install -y rh-python38 rh-python38-python rh-python38-python-devel rh-python38-python-libs rh-python38-python-pip \
 && yum install -y devtoolset-11 devtoolset-11-gcc devtoolset-11-gcc-c++ rh-git29 rh-maven36 \
 && yum install -y http://mirror.centos.org/centos/7/os/x86_64/Packages/pcre2-utf32-10.23-2.el7.x86_64.rpm \
 && yum install -y http://mirror.centos.org/centos/7/os/x86_64/Packages/pcre2-devel-10.23-2.el7.x86_64.rpm \
 && yum install -y openssl-devel openssl-pkcs11 http://mirror.centos.org/centos/7/os/x86_64/Packages/softhsm-devel-2.1.0-3.el7.x86_64.rpm \
 && yum install -y https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/a/asio-devel-1.10.8-1.el7.x86_64.rpm

#############################################
#
# Install Python Libraries
#    *  Use PIP3 to Install Python Libraries
#
#  Software Channel Libraries are not enabled in an image, so need to use the full path
#  to the pip3 and then source scl the calls inside the default .bashrc that is loaded into the image
RUN /opt/rh/rh-python38/root/usr/bin/pip3 install -U colcon-common-extensions vcstool

#############################################
#
# Install CMake3
#    *  Extract CMake3
#    *  Enable in alternatives
#    *  Remove install packages
#
WORKDIR /opt/cmake3
RUN wget https://github.com/Kitware/CMake/releases/download/v3.24.0-rc4/cmake-3.24.0-rc4-linux-x86_64.sh \
 && chmod 744 cmake-3.24.0-rc4-linux-x86_64.sh \
 && ./cmake-3.24.0-rc4-linux-x86_64.sh --skip-license --prefix=/opt/cmake3 \
 && update-alternatives --install /usr/bin/cmake cmake /opt/cmake3/bin/cmake 10 \
 && update-alternatives --install /usr/bin/cmake3 cmake3 /opt/cmake3/bin/cmake 20
 
#############################################
#
# Install Gradle
# 
#    *  Gradle 6.9
WORKDIR /opt
RUN wget https://services.gradle.org/distributions/gradle-6.9-all.zip \
 && unzip -d /opt gradle-6.9-all.zip \
 && mv gradle-6.9 gradle
RUN /opt/gradle/bin/gradle --quiet
COPY configs/gradle.properties /root/.gradle

#############################################
#
# Put .bashrc in place
# 
COPY configs/ubi7-dev-root-bashrc /root/.bashrc

#############################################
#
# Clean up actions
#    *  Remove Yum cache
#    *  Cleanup CMake3
#    *  Cleanup Gradle
WORKDIR /opt
RUN yum clean -y all \
 && rm -rf /var/cache/yum \
 && rm /opt/cmake3/cmake-3.24.0-rc4-linux-x86_64.sh \
 && rm gradle-6.9-all.zip